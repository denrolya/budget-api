# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    container.dumper.inline_factories: true

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $fixerApiKey: "%env(FIXER_API_KEY)%"
            $collectionDataProvider: '@api_platform.doctrine.orm.default.collection_data_provider'
            $itemDataProvider: '@api_platform.doctrine.orm.default.item_data_provider'

    # This here is to fix FOSRestBundlev3.7.0; v3.6.0 works without this
    sensio_framework_extra.view.listener:
        alias: Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener

    # make classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Request\ParamConverter\CarbonParamConverter:
        tags:
            - { name: request.param_converter, converter: carbon }

    App\Request\ParamConverter\CarbonIntervalParamConverter:
        tags:
            - { name: request.param_converter, converter: carbonInterval }

    jms_serializer.serialized_name_annotation_strategy:
        class: JMS\Serializer\Naming\SerializedNameAnnotationStrategy
        arguments:
            - '@jms_serializer.identical_property_naming_strategy'

    doctrine.filter.configurator:
        class: App\Filter\Configurator
        arguments:
            - '@doctrine.orm.default_entity_manager'
            - '@security.helper'
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    security.user_password_hasher:
        class: Symfony\Component\PasswordHasher\Hasher\UserPasswordHasher
        public: true
        arguments:
          [ '@security.password_hasher_factory' ]

    App\OpenApi\JwtDecorator:
        decorates: 'api_platform.openapi.factory'
        arguments: [ '@.inner' ]
        autoconfigure: false
        decoration_priority: 1000

    App\OpenApi\FilterPathsDecorator:
        decorates: 'api_platform.openapi.factory'
        arguments: [ '@.inner' ]
        autoconfigure: false
        decoration_priority: 1001

    App\DataTransformer\TagInputDataTransformer: ~
    App\DataTransformer\TagOutputDataTransformer: ~

    App\DataPersister\DebtDataPersister:
        bind:
            $decorated: '@api_platform.doctrine.orm.data_persister'

    App\EventListener\TransferCreateTransactionsHandler:
        tags:
            - { name: doctrine.orm.entity_listener, event: prePersist, entity: 'App\Entity\Transfer', method: prePersist }

    App\EventListener\TransactionListener:
        tags:
            - { name: doctrine.event_listener, event: onFlush }

    App\EventListener\ValuableEntityEventListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }

    App\EventListener\AccountLogger:
        tags:
            - { name: doctrine.event_listener, event: onFlush }

when@test:
    services:
        _defaults:
            autowire: true      # Automatically injects dependencies in your services.
            autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
            bind:
                $fixerApiKey: "dummy_api_key"

        App\Service\FixerService:
            public: true
